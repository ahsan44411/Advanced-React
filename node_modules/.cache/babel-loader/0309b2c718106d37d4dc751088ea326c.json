{"ast":null,"code":"var _jsxFileName = \"/home/shroud/react/Advanced-React/src/tutorial/2-useEffect/setup/2-useEffect-cleanup.js\";\nimport React, { useState, useEffect } from 'react'; // cleanup function\n// second argument\n\nconst UseEffectCleanup = () => {\n  const [size, setSize] = useState(window.innerWidth);\n  console.log(size);\n\n  const checkSize = () => {\n    setSize(window.innerHeight);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', setSize);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \"Window\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, size, \" PX\"));\n};\n\nexport default UseEffectCleanup;","map":{"version":3,"sources":["/home/shroud/react/Advanced-React/src/tutorial/2-useEffect/setup/2-useEffect-cleanup.js"],"names":["React","useState","useEffect","UseEffectCleanup","size","setSize","window","innerWidth","console","log","checkSize","innerHeight","addEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;AACA;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAE7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAACK,MAAM,CAACC,UAAR,CAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AAEA,QAAMM,SAAS,GAAG,MAAM;AACtBL,IAAAA,OAAO,CAACC,MAAM,CAACK,WAAR,CAAP;AACD,GAFD;;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,OAAlC;AACD,GAFQ,CAAT;AAIA,sBAAM,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAL,QAFF,CAAN;AAKD,CAlBD;;AAoBA,eAAeD,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// cleanup function\n// second argument\n\nconst UseEffectCleanup = () => {\n\n  const [size, setSize] = useState(window.innerWidth);\n  console.log(size);\n\n  const checkSize = () => {\n    setSize(window.innerHeight)\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', setSize)\n  })\n\n  return<>\n          <h1>Window</h1>\n          <h2>{size} PX</h2>\n        </>;\n\n};\n\nexport default UseEffectCleanup;\n"]},"metadata":{},"sourceType":"module"}