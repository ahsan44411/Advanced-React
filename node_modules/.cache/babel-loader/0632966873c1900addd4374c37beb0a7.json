{"ast":null,"code":"export const reducer = (state, action) => {\n  const newPeople = [...state.people, action.payload];\n  console.log(action.type);\n\n  if (action.type === 'ADD_ITEM') {\n    return { ...state,\n      people: newPeople,\n      isModalOpen: true,\n      modalContent: \"item added\"\n    };\n  }\n\n  ;\n\n  if (action.type === 'No_Value') {\n    return { ...state,\n      isModalOpen: true,\n      modalContent: 'Please Enter Value'\n    };\n  }\n\n  if (action.type === \"CLOSE_MODAL\") {\n    return { ...state,\n      isModalOpen: true,\n      modalContent: 'please enter value'\n    };\n  }\n\n  if (action.type === \"REMOVE_ITEM\") {\n    const newPeople = state.people.filter(person => person.id !== action.payload);\n    return { ...state,\n      people: newPeople\n    };\n  }\n\n  throw new Error('no matching action type');\n};","map":{"version":3,"sources":["/home/shroud/react/Advanced-React/src/tutorial/6-useReducer/setup/reducer.js"],"names":["reducer","state","action","newPeople","people","payload","console","log","type","isModalOpen","modalContent","filter","person","id","Error"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,QAAMC,SAAS,GAAG,CAAC,GAAGF,KAAK,CAACG,MAAV,EAAkBF,MAAM,CAACG,OAAzB,CAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,IAAnB;;AACA,MAAIN,MAAM,CAACM,IAAP,KAAgB,UAApB,EAAgC;AAC5B,WAAO,EAAE,GAAGP,KAAL;AAAYG,MAAAA,MAAM,EAAED,SAApB;AAA+BM,MAAAA,WAAW,EAAE,IAA5C;AAAkDC,MAAAA,YAAY,EAAE;AAAhE,KAAP;AACH;;AAAA;;AACD,MAAIR,MAAM,CAACM,IAAP,KAAgB,UAApB,EAAgC;AAC5B,WAAO,EAAE,GAAGP,KAAL;AAAYQ,MAAAA,WAAW,EAAE,IAAzB;AAA+BC,MAAAA,YAAY,EAAE;AAA7C,KAAP;AACH;;AACD,MAAIR,MAAM,CAACM,IAAP,KAAgB,aAApB,EAAmC;AAC/B,WAAO,EAAE,GAAGP,KAAL;AAAYQ,MAAAA,WAAW,EAAE,IAAzB;AAA+BC,MAAAA,YAAY,EAAE;AAA7C,KAAP;AACH;;AACD,MAAIR,MAAM,CAACM,IAAP,KAAgB,aAApB,EAAmC;AAC/B,UAAML,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaO,MAAb,CAAqBC,MAAD,IAAYA,MAAM,CAACC,EAAP,KAAcX,MAAM,CAACG,OAArD,CAAlB;AACA,WAAO,EAAE,GAAGJ,KAAL;AAAYG,MAAAA,MAAM,EAAED;AAApB,KAAP;AACH;;AAED,QAAM,IAAIW,KAAJ,CAAU,yBAAV,CAAN;AACH,CAlBM","sourcesContent":["export const reducer = (state, action) => {\n    const newPeople = [...state.people, action.payload]\n    console.log(action.type)\n    if (action.type === 'ADD_ITEM') {\n        return { ...state, people: newPeople, isModalOpen: true, modalContent: \"item added\" };\n    };\n    if (action.type === 'No_Value') {\n        return { ...state, isModalOpen: true, modalContent: 'Please Enter Value' };\n    }\n    if (action.type === \"CLOSE_MODAL\") {\n        return { ...state, isModalOpen: true, modalContent: 'please enter value' };\n    }\n    if (action.type === \"REMOVE_ITEM\") {\n        const newPeople = state.people.filter((person) => person.id !== action.payload);\n        return { ...state, people: newPeople };\n    }\n\n    throw new Error('no matching action type')\n}\n\n\n"]},"metadata":{},"sourceType":"module"}