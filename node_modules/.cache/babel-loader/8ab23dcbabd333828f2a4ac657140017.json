{"ast":null,"code":"var _jsxFileName = \"/home/shroud/react/Advanced-React/src/tutorial/6-useReducer/setup/index.js\";\nimport React, { useState, useReducer } from 'react';\nimport Modal from './Modal';\nimport { data } from '../../../data'; // reducer function\n\nconst reducer = (state, action) => {\n  const newPeople = [...state.people, action.payload];\n  console.log(action.type);\n\n  if (action.type === 'ADD_ITEM') {\n    return { ...state,\n      people: newPeople,\n      isModalOpen: true,\n      modalContent: \"item added\"\n    };\n  }\n\n  ;\n\n  if (action.type === 'No_Value') {\n    return { ...state,\n      isModalOpen: true,\n      modalContent: 'Please Enter Value'\n    };\n  }\n\n  if (action.type === \"CLOSE_MODAL\") {\n    return { ...state,\n      isModalOpen: true,\n      modalContent: 'please enter value'\n    };\n  }\n\n  if (action.type === \"CLOSE_MODAL\") {\n    return { ...state,\n      isModalOpen: true,\n      modalContent: 'please enter value'\n    };\n  }\n\n  throw new Error('no matching action type');\n};\n\nconst defaultState = {\n  people: [],\n  isModalOpen: false,\n  modalContent: \"Please Enter Value\"\n};\n\nconst Index = () => {\n  const [name, setName] = useState(''); // const [people, setPeople] = useState(data);\n  // const [showModal, setShowModal] = useState(false);\n\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(name);\n\n    if (name) {\n      console.log('k bro');\n      const newItem = {\n        id: new Date().toDateString(),\n        name\n      };\n      dispatch({\n        type: 'ADD_ITEM',\n        payload: newItem\n      });\n      setName('');\n    } else {\n      dispatch({\n        type: 'No_Value'\n      });\n    }\n  };\n\n  const closeModal = () => {\n    dispatch({\n      type: \"CLOSE_MODAL\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, state.isModalOpen && /*#__PURE__*/React.createElement(Modal, {\n    closeModal: closeModal,\n    modalContent: state.modalContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Add\")), state.people.map(person => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: person.id,\n      className: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, person.name), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: dispatch({\n        type: \"REMOVE_ITEM\",\n        payload: person.id\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Remove Item\"));\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/shroud/react/Advanced-React/src/tutorial/6-useReducer/setup/index.js"],"names":["React","useState","useReducer","Modal","data","reducer","state","action","newPeople","people","payload","console","log","type","isModalOpen","modalContent","Error","defaultState","Index","name","setName","dispatch","handleSubmit","e","preventDefault","newItem","id","Date","toDateString","closeModal","target","value","map","person"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from 'react';\nimport Modal from './Modal';\nimport { data } from '../../../data';\n// reducer function\n\nconst reducer = (state, action) => {\n  const newPeople = [...state.people, action.payload]\n  console.log(action.type)\n  if (action.type === 'ADD_ITEM') {\n    return { ...state, people: newPeople, isModalOpen: true, modalContent: \"item added\" };\n  };\n  if (action.type === 'No_Value') {\n    return { ...state, isModalOpen: true, modalContent: 'Please Enter Value' };\n  }\n  if (action.type === \"CLOSE_MODAL\") {\n    return { ...state, isModalOpen: true, modalContent: 'please enter value' };\n  }\n  if (action.type === \"CLOSE_MODAL\") {\n    return { ...state, isModalOpen: true, modalContent: 'please enter value' };\n  }\n\n  throw new Error('no matching action type')\n}\n\nconst defaultState = {\n  people: [],\n  isModalOpen: false,\n  modalContent: \"Please Enter Value\",\n};\n\nconst Index = () => {\n  const [name, setName] = useState('');\n  // const [people, setPeople] = useState(data);\n  // const [showModal, setShowModal] = useState(false);\n\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(name)\n    if (name) {\n      console.log('k bro')\n      const newItem = { id: new Date().toDateString(), name };\n      dispatch({ type: 'ADD_ITEM', payload: newItem });\n      setName('');\n    } else {\n      dispatch({ type: 'No_Value' });\n    }\n  }\n  const closeModal = () => {\n    dispatch({ type: \"CLOSE_MODAL\" })\n  }\n\n  return <>\n    {state.isModalOpen && <Modal closeModal={closeModal} modalContent={state.modalContent} />}\n    <form onSubmit={handleSubmit} className=\"form\">\n      <div>\n        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n      </div>\n      <button type=\"submit\">Add</button>\n    </form>\n    {state.people.map((person) => {\n      return (\n        <div key={person.id} className=\"item\">\n          <h4>{person.name}</h4>\n          <button onClick={dispatch({ type: \"REMOVE_ITEM\", payload: person.id })}>Remove Item</button>\n        </div>\n      )\n    })}\n  </>;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}