{"ast":null,"code":"var _jsxFileName = \"/home/shroud/react/Advanced-React/src/tutorial/6-useReducer/setup/index.js\";\nimport React, { useState, useReducer } from 'react';\nimport Modal from './Modal';\nimport { data } from '../../../data'; // reducer function\n\nconst reducer = (state, action) => {\n  if (action.type === 'ADD_ITEM') {\n    return { ...state,\n      people: [],\n      isModalOpen: true,\n      modalContent: \"item added\"\n    };\n  }\n\n  throw new Error('no matching action type');\n};\n\nconst defaultState = {\n  people: [],\n  isModalOpen: false,\n  modalContent: \"\"\n};\n\nconst Index = () => {\n  const [name, setName] = useState(''); // const [people, setPeople] = useState(data);\n  // const [showModal, setShowModal] = useState(false);\n\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name) {\n      const newItem = {\n        id: new Date().toDateString(),\n        name\n      };\n      dispatch({\n        type: 'ADD_ITEM'\n      });\n    } else {\n      dispatch({\n        type: 'Random'\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, state.isModalOpen && /*#__PURE__*/React.createElement(Modal, {\n    modalContent: state.modalContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Add\")), state.people.map(person => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: person.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, person.name));\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/shroud/react/Advanced-React/src/tutorial/6-useReducer/setup/index.js"],"names":["React","useState","useReducer","Modal","data","reducer","state","action","type","people","isModalOpen","modalContent","Error","defaultState","Index","name","setName","dispatch","handleSubmit","e","preventDefault","newItem","id","Date","toDateString","target","value","map","person"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,eAArB,C,CACA;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO,EAAE,GAAGF,KAAL;AAAYG,MAAAA,MAAM,EAAE,EAApB;AAAwBC,MAAAA,WAAW,EAAE,IAArC;AAA2CC,MAAAA,YAAY,EAAE;AAAzD,KAAP;AACD;;AACD,QAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD,CALD;;AAOA,MAAMC,YAAY,GAAG;AACnBJ,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,WAAW,EAAE,KAFM;AAGnBC,EAAAA,YAAY,EAAE;AAHK,CAArB;;AAMA,MAAMG,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC,CADkB,CAElB;AACA;;AAEA,QAAM,CAACK,KAAD,EAAQW,QAAR,IAAoBf,UAAU,CAACG,OAAD,EAAUQ,YAAV,CAApC;;AAEA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIL,IAAJ,EAAU;AACR,YAAMM,OAAO,GAAG;AAAEC,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,YAAX,EAAN;AAAiCT,QAAAA;AAAjC,OAAhB;AACAE,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAHD,MAGO;AACLS,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD;AACF,GARD;;AAUA,sBAAO,0CACJF,KAAK,CAACI,WAAN,iBAAqB,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAEJ,KAAK,CAACK,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,eAEL;AAAM,IAAA,QAAQ,EAAEO,YAAhB;AAA8B,IAAA,SAAS,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEH,IAA1B;AAAgC,IAAA,QAAQ,EAAGI,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACM,MAAF,CAASC,KAAV,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,CAFK,EAQJpB,KAAK,CAACG,MAAN,CAAakB,GAAb,CAAkBC,MAAD,IAAY;AAC5B,wBACE;AAAK,MAAA,GAAG,EAAEA,MAAM,CAACN,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKM,MAAM,CAACb,IAAZ,CADF,CADF;AAKD,GANA,CARI,CAAP;AAgBD,CAjCD;;AAmCA,eAAeD,KAAf","sourcesContent":["import React, { useState, useReducer } from 'react';\nimport Modal from './Modal';\nimport { data } from '../../../data';\n// reducer function\n\nconst reducer = (state, action) => {\n  if (action.type === 'ADD_ITEM') {\n    return { ...state, people: [], isModalOpen: true, modalContent: \"item added\" };\n  }\n  throw new Error('no matching action type')\n}\n\nconst defaultState = {\n  people: [],\n  isModalOpen: false,\n  modalContent: \"\",\n};\n\nconst Index = () => {\n  const [name, setName] = useState('');\n  // const [people, setPeople] = useState(data);\n  // const [showModal, setShowModal] = useState(false);\n\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name) {\n      const newItem = { id: new Date().toDateString(), name }\n      dispatch({ type: 'ADD_ITEM' })\n    } else {\n      dispatch({ type: 'Random' })\n    }\n  }\n\n  return <>\n    {state.isModalOpen && <Modal modalContent={state.modalContent} />}\n    <form onSubmit={handleSubmit} className=\"form\">\n      <div>\n        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n      </div>\n      <button type=\"submit\">Add</button>\n    </form>\n    {state.people.map((person) => {\n      return (\n        <div key={person.id}>\n          <h4>{person.name}</h4>\n        </div>\n      )\n    })}\n  </>;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}